name: CI

'on':
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  docker:
    name: Build Docker Image
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Convert repository name ot image name
        id: image_name
        run: |
          sed -E -e 's/docker-//' -e 's/^/image_name=/' <<<"${{ github.repository }}" >> "$GITHUB_OUTPUT"

      - name: Generate Docker tag names
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ steps.image_name.outputs.image_name }}
            ${{ steps.image_name.outputs.image_name }}
          # generate Docker tags based on the following events/attributes
          tags: |
            # set edge tag for default branch
            type=edge,enable={{is_default_branch}}
            # set dev tag for dev branch
            type=raw,value=dev,enable=${{ github.ref == format('refs/heads/{0}', 'dev') }},branch=dev
            # set build-test tag for any branch not dev or the default one
            type=raw,value=build-test,enable=${{ github.ref != format('refs/heads/{0}', 'dev') && github.ref != format('refs/heads/{0}', github.event.repository.default_branch) }},branch=dev

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build only
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          # Push only for default branch or dev branch
          push: false
          tags: ${{ steps.meta.outputs.tags }}
  